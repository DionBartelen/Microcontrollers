
Miniproject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  00000d52  00000de6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d52  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800142  00800142  00000e28  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e28  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e84  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000138d  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bd6  00000000  00000000  00002355  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000090e  00000000  00000000  00002f2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000218  00000000  00000000  0000383c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000658  00000000  00000000  00003a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000659  00000000  00000000  000040ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004705  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__vector_2>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e5       	ldi	r30, 0x52	; 82
  a0:	fd e0       	ldi	r31, 0x0D	; 13
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 34       	cpi	r26, 0x42	; 66
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e4       	ldi	r26, 0x42	; 66
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 35       	cpi	r26, 0x52	; 82
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	b3 d1       	rcall	.+870    	; 0x42a <main>
  c4:	44 c6       	rjmp	.+3208   	; 0xd4e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADCInit>:

#include <avr/io.h>
#include <avr/delay.h>

void ADCInit(){
	ADMUX = 0b11100000;
  c8:	80 ee       	ldi	r24, 0xE0	; 224
  ca:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b11100110;
  cc:	86 ee       	ldi	r24, 0xE6	; 230
  ce:	86 b9       	out	0x06, r24	; 6
  d0:	08 95       	ret

000000d2 <ADCcurrentValue>:
}


int ADCcurrentValue() {
	return (((float)(ADCH)) / 255.0) * 100.0;
  d2:	65 b1       	in	r22, 0x05	; 5
  d4:	70 e0       	ldi	r23, 0x00	; 0
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	6d d2       	rcall	.+1242   	; 0x5b6 <__floatunsisf>
  dc:	20 e0       	ldi	r18, 0x00	; 0
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	4f e7       	ldi	r20, 0x7F	; 127
  e2:	53 e4       	ldi	r21, 0x43	; 67
  e4:	cf d1       	rcall	.+926    	; 0x484 <__divsf3>
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	48 ec       	ldi	r20, 0xC8	; 200
  ec:	52 e4       	ldi	r21, 0x42	; 66
  ee:	f1 d2       	rcall	.+1506   	; 0x6d2 <__mulsf3>
  f0:	31 d2       	rcall	.+1122   	; 0x554 <__fixsfsi>
  f2:	cb 01       	movw	r24, r22
  f4:	08 95       	ret

000000f6 <ButtonInputInit>:
#include <avr/interrupt.h>

int buttonPressed = 0;

void ButtonInputInit() {
	EICRA = 0b00001100;
  f6:	8c e0       	ldi	r24, 0x0C	; 12
  f8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 0b00000010;
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	89 bf       	out	0x39, r24	; 57
 100:	08 95       	ret

00000102 <ButtonInputGetButtonPressed>:
}

int ButtonInputGetButtonPressed() {
	if(buttonPressed) {
 102:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
 106:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	49 f0       	breq	.+18     	; 0x120 <ButtonInputGetButtonPressed+0x1e>
		wait(500);
 10e:	84 ef       	ldi	r24, 0xF4	; 244
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	7a d1       	rcall	.+756    	; 0x408 <wait>
		buttonPressed = 0;
 114:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <__data_end+0x1>
 118:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <__data_end>
		return 1;
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
 120:	08 95       	ret

00000122 <__vector_2>:

ISR( INT1_vect )
{
 122:	1f 92       	push	r1
 124:	0f 92       	push	r0
 126:	0f b6       	in	r0, 0x3f	; 63
 128:	0f 92       	push	r0
 12a:	11 24       	eor	r1, r1
 12c:	8f 93       	push	r24
 12e:	9f 93       	push	r25
	buttonPressed = 1;
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
 138:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
 13c:	9f 91       	pop	r25
 13e:	8f 91       	pop	r24
 140:	0f 90       	pop	r0
 142:	0f be       	out	0x3f, r0	; 63
 144:	0f 90       	pop	r0
 146:	1f 90       	pop	r1
 148:	18 95       	reti

0000014a <lcd_writeChar>:
	}
	for(int x = cursorPos; x < pos; x++) {
		LCD_command(0b0000010100);
	}
	cursorPos = cursorPos + pos;
}
 14a:	98 2f       	mov	r25, r24
 14c:	90 7f       	andi	r25, 0xF0	; 240
 14e:	95 bb       	out	0x15, r25	; 21
 150:	95 b3       	in	r25, 0x15	; 21
 152:	9c 60       	ori	r25, 0x0C	; 12
 154:	95 bb       	out	0x15, r25	; 21
 156:	ef ec       	ldi	r30, 0xCF	; 207
 158:	f7 e0       	ldi	r31, 0x07	; 7
 15a:	31 97       	sbiw	r30, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <lcd_writeChar+0x10>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <lcd_writeChar+0x16>
 160:	00 00       	nop
 162:	94 e0       	ldi	r25, 0x04	; 4
 164:	95 bb       	out	0x15, r25	; 21
 166:	f0 e1       	ldi	r31, 0x10	; 16
 168:	8f 9f       	mul	r24, r31
 16a:	c0 01       	movw	r24, r0
 16c:	11 24       	eor	r1, r1
 16e:	85 bb       	out	0x15, r24	; 21
 170:	85 b3       	in	r24, 0x15	; 21
 172:	8c 60       	ori	r24, 0x0C	; 12
 174:	85 bb       	out	0x15, r24	; 21
 176:	8f ec       	ldi	r24, 0xCF	; 207
 178:	97 e0       	ldi	r25, 0x07	; 7
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <lcd_writeChar+0x30>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <lcd_writeChar+0x36>
 180:	00 00       	nop
 182:	15 ba       	out	0x15, r1	; 21
 184:	08 95       	ret

00000186 <LCDdisplay_text>:
 186:	0f 93       	push	r16
 188:	1f 93       	push	r17
 18a:	cf 93       	push	r28
 18c:	df 93       	push	r29
 18e:	ef ec       	ldi	r30, 0xCF	; 207
 190:	f7 e0       	ldi	r31, 0x07	; 7
 192:	31 97       	sbiw	r30, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <LCDdisplay_text+0xc>
 196:	00 c0       	rjmp	.+0      	; 0x198 <LCDdisplay_text+0x12>
 198:	00 00       	nop
 19a:	fc 01       	movw	r30, r24
 19c:	01 90       	ld	r0, Z+
 19e:	00 20       	and	r0, r0
 1a0:	e9 f7       	brne	.-6      	; 0x19c <LCDdisplay_text+0x16>
 1a2:	31 97       	sbiw	r30, 0x01	; 1
 1a4:	e8 1b       	sub	r30, r24
 1a6:	f9 0b       	sbc	r31, r25
 1a8:	1e 16       	cp	r1, r30
 1aa:	1f 06       	cpc	r1, r31
 1ac:	54 f4       	brge	.+20     	; 0x1c2 <LCDdisplay_text+0x3c>
 1ae:	ec 01       	movw	r28, r24
 1b0:	8c 01       	movw	r16, r24
 1b2:	0e 0f       	add	r16, r30
 1b4:	1f 1f       	adc	r17, r31
 1b6:	89 91       	ld	r24, Y+
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	c7 df       	rcall	.-114    	; 0x14a <lcd_writeChar>
 1bc:	c0 17       	cp	r28, r16
 1be:	d1 07       	cpc	r29, r17
 1c0:	d1 f7       	brne	.-12     	; 0x1b6 <LCDdisplay_text+0x30>
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	08 95       	ret

000001cc <LCDdisplay_textTop>:
 1cc:	dc cf       	rjmp	.-72     	; 0x186 <LCDdisplay_text>
 1ce:	08 95       	ret

000001d0 <LCD_command>:
 1d0:	98 2f       	mov	r25, r24
 1d2:	90 7f       	andi	r25, 0xF0	; 240
 1d4:	95 bb       	out	0x15, r25	; 21
 1d6:	ab 9a       	sbi	0x15, 3	; 21
 1d8:	ef ec       	ldi	r30, 0xCF	; 207
 1da:	f7 e0       	ldi	r31, 0x07	; 7
 1dc:	31 97       	sbiw	r30, 0x01	; 1
 1de:	f1 f7       	brne	.-4      	; 0x1dc <LCD_command+0xc>
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <LCD_command+0x12>
 1e2:	00 00       	nop
 1e4:	94 e0       	ldi	r25, 0x04	; 4
 1e6:	95 bb       	out	0x15, r25	; 21
 1e8:	f0 e1       	ldi	r31, 0x10	; 16
 1ea:	8f 9f       	mul	r24, r31
 1ec:	c0 01       	movw	r24, r0
 1ee:	11 24       	eor	r1, r1
 1f0:	85 bb       	out	0x15, r24	; 21
 1f2:	ab 9a       	sbi	0x15, 3	; 21
 1f4:	8f ec       	ldi	r24, 0xCF	; 207
 1f6:	97 e0       	ldi	r25, 0x07	; 7
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <LCD_command+0x28>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <LCD_command+0x2e>
 1fe:	00 00       	nop
 200:	15 ba       	out	0x15, r1	; 21
 202:	08 95       	ret

00000204 <LCDinit>:
 204:	82 e0       	ldi	r24, 0x02	; 2
 206:	e4 df       	rcall	.-56     	; 0x1d0 <LCD_command>
 208:	88 e2       	ldi	r24, 0x28	; 40
 20a:	e2 df       	rcall	.-60     	; 0x1d0 <LCD_command>
 20c:	8c e0       	ldi	r24, 0x0C	; 12
 20e:	e0 df       	rcall	.-64     	; 0x1d0 <LCD_command>
 210:	86 e0       	ldi	r24, 0x06	; 6
 212:	de df       	rcall	.-68     	; 0x1d0 <LCD_command>
 214:	80 e8       	ldi	r24, 0x80	; 128
 216:	dc cf       	rjmp	.-72     	; 0x1d0 <LCD_command>
 218:	08 95       	ret

0000021a <LCDdisplay_textBot>:
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	ec 01       	movw	r28, r24
 220:	80 ec       	ldi	r24, 0xC0	; 192
 222:	d6 df       	rcall	.-84     	; 0x1d0 <LCD_command>
 224:	ce 01       	movw	r24, r28
 226:	af df       	rcall	.-162    	; 0x186 <LCDdisplay_text>
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	08 95       	ret

0000022e <LCDclr_display>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 22e:	8f ec       	ldi	r24, 0xCF	; 207
 230:	97 e0       	ldi	r25, 0x07	; 7
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <LCDclr_display+0x4>
 236:	00 c0       	rjmp	.+0      	; 0x238 <LCDclr_display+0xa>
 238:	00 00       	nop

void LCDclr_display() {
	_delay_ms(1);
	LCD_command(0x01);
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	c9 cf       	rjmp	.-110    	; 0x1d0 <LCD_command>
 23e:	08 95       	ret

00000240 <checkADC>:
		wait(250);
    }
}

void checkADC() {
	int newADCvalue = ADCcurrentValue();
 240:	48 df       	rcall	.-368    	; 0xd2 <ADCcurrentValue>
	if(prevADCvalue != newADCvalue) {
 242:	20 91 4c 01 	lds	r18, 0x014C	; 0x80014c <prevADCvalue>
 246:	30 91 4d 01 	lds	r19, 0x014D	; 0x80014d <prevADCvalue+0x1>
 24a:	82 17       	cp	r24, r18
 24c:	93 07       	cpc	r25, r19
 24e:	51 f0       	breq	.+20     	; 0x264 <checkADC+0x24>
		prevADCvalue = newADCvalue;
 250:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <prevADCvalue+0x1>
 254:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <prevADCvalue>
		displayDirtyFlag = 1;
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <displayDirtyFlag+0x1>
 260:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <displayDirtyFlag>
 264:	08 95       	ret

00000266 <checkBPLocked>:
	}
}

void checkBPLocked() {
	if(ButtonInputGetButtonPressed()) {
 266:	4d df       	rcall	.-358    	; 0x102 <ButtonInputGetButtonPressed>
 268:	89 2b       	or	r24, r25
 26a:	c1 f1       	breq	.+112    	; 0x2dc <checkBPLocked+0x76>
		if(prevADCvalue == code[currentNumber]) {
 26c:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <currentNumber>
 270:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <currentNumber+0x1>
 274:	fc 01       	movw	r30, r24
 276:	ee 0f       	add	r30, r30
 278:	ff 1f       	adc	r31, r31
 27a:	ec 5b       	subi	r30, 0xBC	; 188
 27c:	fe 4f       	sbci	r31, 0xFE	; 254
 27e:	40 81       	ld	r20, Z
 280:	51 81       	ldd	r21, Z+1	; 0x01
 282:	20 91 4c 01 	lds	r18, 0x014C	; 0x80014c <prevADCvalue>
 286:	30 91 4d 01 	lds	r19, 0x014D	; 0x80014d <prevADCvalue+0x1>
 28a:	42 17       	cp	r20, r18
 28c:	53 07       	cpc	r21, r19
 28e:	b9 f4       	brne	.+46     	; 0x2be <checkBPLocked+0x58>
			currentNumber++;
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <currentNumber+0x1>
 296:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <currentNumber>
			if(currentNumber >= lengthCode) {
 29a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 29e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 2a2:	82 17       	cp	r24, r18
 2a4:	93 07       	cpc	r25, r19
 2a6:	a4 f0       	brlt	.+40     	; 0x2d0 <checkBPLocked+0x6a>
				state = UNLOCKED;
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <state+0x1>
 2b0:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <state>
				currentNumber = 0;
 2b4:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <currentNumber+0x1>
 2b8:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <currentNumber>
 2bc:	09 c0       	rjmp	.+18     	; 0x2d0 <checkBPLocked+0x6a>
			}
		} else {
			amountGuesses--;
 2be:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <amountGuesses>
 2c2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <amountGuesses+0x1>
 2c6:	01 97       	sbiw	r24, 0x01	; 1
 2c8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <amountGuesses+0x1>
 2cc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <amountGuesses>
		}
		displayDirtyFlag = 1;
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <displayDirtyFlag+0x1>
 2d8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <displayDirtyFlag>
 2dc:	08 95       	ret

000002de <checkBPUnlocked>:
	}
}

void checkBPUnlocked() {
	if(ButtonInputGetButtonPressed()) {
 2de:	11 df       	rcall	.-478    	; 0x102 <ButtonInputGetButtonPressed>
 2e0:	89 2b       	or	r24, r25
 2e2:	71 f0       	breq	.+28     	; 0x300 <checkBPUnlocked+0x22>
		state = LOCKED;
 2e4:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <state+0x1>
 2e8:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <state>
		currentNumber = 0;
 2ec:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <currentNumber+0x1>
 2f0:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <currentNumber>
		amountGuesses = 3;
 2f4:	83 e0       	ldi	r24, 0x03	; 3
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <amountGuesses+0x1>
 2fc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <amountGuesses>
 300:	08 95       	ret

00000302 <updateDisplayCodeInput>:
	}
}

void updateDisplayCodeInput() {
 302:	0f 93       	push	r16
 304:	1f 93       	push	r17
 306:	cf 93       	push	r28
 308:	df 93       	push	r29
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
 30e:	a0 97       	sbiw	r28, 0x20	; 32
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	f8 94       	cli
 314:	de bf       	out	0x3e, r29	; 62
 316:	0f be       	out	0x3f, r0	; 63
 318:	cd bf       	out	0x3d, r28	; 61
	displayDirtyFlag = 0;
 31a:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <displayDirtyFlag+0x1>
 31e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <displayDirtyFlag>
	LCDclr_display();
 322:	85 df       	rcall	.-246    	; 0x22e <LCDclr_display>
	char newTopText[16];
	char *codeStr;
	if(currentNumber == 0) {
 324:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <currentNumber>
 328:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <currentNumber+0x1>
 32c:	00 97       	sbiw	r24, 0x00	; 0
 32e:	59 f0       	breq	.+22     	; 0x346 <updateDisplayCodeInput+0x44>
		codeStr = "    ";
		} else if(currentNumber == 1) {
 330:	81 30       	cpi	r24, 0x01	; 1
 332:	91 05       	cpc	r25, r1
 334:	59 f0       	breq	.+22     	; 0x34c <updateDisplayCodeInput+0x4a>
		codeStr = "-   ";
		} else if(currentNumber == 2) {
 336:	82 30       	cpi	r24, 0x02	; 2
 338:	91 05       	cpc	r25, r1
 33a:	59 f0       	breq	.+22     	; 0x352 <updateDisplayCodeInput+0x50>
		codeStr = "--  ";
		} else if(currentNumber == 3) {
 33c:	03 97       	sbiw	r24, 0x03	; 3
 33e:	61 f0       	breq	.+24     	; 0x358 <updateDisplayCodeInput+0x56>
		codeStr = "--- ";
		} else  {
		codeStr = "err";
 340:	84 e3       	ldi	r24, 0x34	; 52
 342:	91 e0       	ldi	r25, 0x01	; 1
 344:	0b c0       	rjmp	.+22     	; 0x35c <updateDisplayCodeInput+0x5a>
	displayDirtyFlag = 0;
	LCDclr_display();
	char newTopText[16];
	char *codeStr;
	if(currentNumber == 0) {
		codeStr = "    ";
 346:	80 e2       	ldi	r24, 0x20	; 32
 348:	91 e0       	ldi	r25, 0x01	; 1
 34a:	08 c0       	rjmp	.+16     	; 0x35c <updateDisplayCodeInput+0x5a>
		} else if(currentNumber == 1) {
		codeStr = "-   ";
 34c:	85 e2       	ldi	r24, 0x25	; 37
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	05 c0       	rjmp	.+10     	; 0x35c <updateDisplayCodeInput+0x5a>
		} else if(currentNumber == 2) {
		codeStr = "--  ";
 352:	8a e2       	ldi	r24, 0x2A	; 42
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	02 c0       	rjmp	.+4      	; 0x35c <updateDisplayCodeInput+0x5a>
		} else if(currentNumber == 3) {
		codeStr = "--- ";
 358:	8f e2       	ldi	r24, 0x2F	; 47
 35a:	91 e0       	ldi	r25, 0x01	; 1
		} else  {
		codeStr = "err";
	}
	sprintf(newTopText, amountNumberInputText, codeStr);
 35c:	9f 93       	push	r25
 35e:	8f 93       	push	r24
 360:	87 e1       	ldi	r24, 0x17	; 23
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	9f 93       	push	r25
 366:	8f 93       	push	r24
 368:	8e 01       	movw	r16, r28
 36a:	0f 5f       	subi	r16, 0xFF	; 255
 36c:	1f 4f       	sbci	r17, 0xFF	; 255
 36e:	1f 93       	push	r17
 370:	0f 93       	push	r16
 372:	12 d2       	rcall	.+1060   	; 0x798 <sprintf>
	LCDdisplay_textTop(newTopText);
 374:	c8 01       	movw	r24, r16
 376:	2a df       	rcall	.-428    	; 0x1cc <LCDdisplay_textTop>
 378:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <amountGuesses+0x1>
	char newBotText[16];
	sprintf(newBotText, numberLockText, prevADCvalue, amountGuesses);
 37c:	8f 93       	push	r24
 37e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <amountGuesses>
 382:	8f 93       	push	r24
 384:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <prevADCvalue+0x1>
 388:	8f 93       	push	r24
 38a:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <prevADCvalue>
 38e:	8f 93       	push	r24
 390:	86 e0       	ldi	r24, 0x06	; 6
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	9f 93       	push	r25
 396:	8f 93       	push	r24
 398:	00 5f       	subi	r16, 0xF0	; 240
 39a:	1f 4f       	sbci	r17, 0xFF	; 255
 39c:	1f 93       	push	r17
 39e:	0f 93       	push	r16
 3a0:	fb d1       	rcall	.+1014   	; 0x798 <sprintf>
	LCDdisplay_textBot(newBotText);
 3a2:	c8 01       	movw	r24, r16
 3a4:	3a df       	rcall	.-396    	; 0x21a <LCDdisplay_textBot>
 3a6:	0f b6       	in	r0, 0x3f	; 63
	if(state == UNLOCKED) {
 3a8:	f8 94       	cli
 3aa:	de bf       	out	0x3e, r29	; 62
 3ac:	0f be       	out	0x3f, r0	; 63
 3ae:	cd bf       	out	0x3d, r28	; 61
 3b0:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <state>
 3b4:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <state+0x1>
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	31 f4       	brne	.+12     	; 0x3c8 <updateDisplayCodeInput+0xc6>
 3bc:	81 e0       	ldi	r24, 0x01	; 1
		displayDirtyFlag = 1;
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <displayDirtyFlag+0x1>
 3c4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <displayDirtyFlag>
 3c8:	a0 96       	adiw	r28, 0x20	; 32
	}
}
 3ca:	0f b6       	in	r0, 0x3f	; 63
 3cc:	f8 94       	cli
 3ce:	de bf       	out	0x3e, r29	; 62
 3d0:	0f be       	out	0x3f, r0	; 63
 3d2:	cd bf       	out	0x3d, r28	; 61
 3d4:	df 91       	pop	r29
 3d6:	cf 91       	pop	r28
 3d8:	1f 91       	pop	r17
 3da:	0f 91       	pop	r16
 3dc:	08 95       	ret

000003de <updateDisplayUnlocked>:
 3de:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <displayDirtyFlag+0x1>

void updateDisplayUnlocked() {
	displayDirtyFlag = 0;
 3e2:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <displayDirtyFlag>
	LCDclr_display();
 3e6:	23 df       	rcall	.-442    	; 0x22e <LCDclr_display>
	LCDdisplay_textTop("Unlocked");
 3e8:	88 e3       	ldi	r24, 0x38	; 56
 3ea:	91 e0       	ldi	r25, 0x01	; 1
 3ec:	ef de       	rcall	.-546    	; 0x1cc <LCDdisplay_textTop>
	if(state == LOCKED) {
 3ee:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <state>
 3f2:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <state+0x1>
 3f6:	89 2b       	or	r24, r25
 3f8:	31 f4       	brne	.+12     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		displayDirtyFlag = 1;
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <displayDirtyFlag+0x1>
 402:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <displayDirtyFlag>
 406:	08 95       	ret

00000408 <wait>:
	}
}

void wait(int ms) {
	for(int x = 0; x < ms; x++) {
 408:	18 16       	cp	r1, r24
 40a:	19 06       	cpc	r1, r25
 40c:	6c f4       	brge	.+26     	; 0x428 <wait+0x20>
 40e:	20 e0       	ldi	r18, 0x00	; 0
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	ef ec       	ldi	r30, 0xCF	; 207
 414:	f7 e0       	ldi	r31, 0x07	; 7
 416:	31 97       	sbiw	r30, 0x01	; 1
 418:	f1 f7       	brne	.-4      	; 0x416 <wait+0xe>
 41a:	00 c0       	rjmp	.+0      	; 0x41c <wait+0x14>
 41c:	00 00       	nop
 41e:	2f 5f       	subi	r18, 0xFF	; 255
 420:	3f 4f       	sbci	r19, 0xFF	; 255
 422:	82 17       	cp	r24, r18
 424:	93 07       	cpc	r25, r19
 426:	a9 f7       	brne	.-22     	; 0x412 <wait+0xa>
 428:	08 95       	ret

0000042a <main>:
	
void wait(int);

int main(void)
{
	DDRC = 0xFF;
 42a:	8f ef       	ldi	r24, 0xFF	; 255
 42c:	84 bb       	out	0x14, r24	; 20
	DDRD = 0x00;
 42e:	11 ba       	out	0x11, r1	; 17
	DDRF = 0x00;
 430:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	
	ADCInit();
 434:	49 de       	rcall	.-878    	; 0xc8 <ADCInit>
	wait(100);
 436:	84 e6       	ldi	r24, 0x64	; 100
 438:	90 e0       	ldi	r25, 0x00	; 0
	LCDinit();
 43a:	e6 df       	rcall	.-52     	; 0x408 <wait>
	wait(100);
 43c:	e3 de       	rcall	.-570    	; 0x204 <LCDinit>
 43e:	84 e6       	ldi	r24, 0x64	; 100
 440:	90 e0       	ldi	r25, 0x00	; 0
	ButtonInputInit();
 442:	e2 df       	rcall	.-60     	; 0x408 <wait>
 444:	58 de       	rcall	.-848    	; 0xf6 <ButtonInputInit>
	sei();
 446:	78 94       	sei
    /* Replace with your application code */
    while (1) 
    {
		if(state == LOCKED) {
 448:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <state>
 44c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <state+0x1>
			checkADC();
 450:	00 97       	sbiw	r24, 0x00	; 0
 452:	51 f4       	brne	.+20     	; 0x468 <main+0x3e>
			checkBPLocked();
 454:	f5 de       	rcall	.-534    	; 0x240 <checkADC>
			if(displayDirtyFlag) {
 456:	07 df       	rcall	.-498    	; 0x266 <checkBPLocked>
 458:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <displayDirtyFlag>
 45c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <displayDirtyFlag+0x1>
				updateDisplayCodeInput();
 460:	89 2b       	or	r24, r25
 462:	61 f0       	breq	.+24     	; 0x47c <main+0x52>
 464:	4e df       	rcall	.-356    	; 0x302 <updateDisplayCodeInput>
			}
		} else if(state == UNLOCKED) {
 466:	0a c0       	rjmp	.+20     	; 0x47c <main+0x52>
			checkBPUnlocked();
 468:	01 97       	sbiw	r24, 0x01	; 1
 46a:	41 f4       	brne	.+16     	; 0x47c <main+0x52>
			if(displayDirtyFlag) {
 46c:	38 df       	rcall	.-400    	; 0x2de <checkBPUnlocked>
 46e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <displayDirtyFlag>
 472:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <displayDirtyFlag+0x1>
				updateDisplayUnlocked();
 476:	89 2b       	or	r24, r25
 478:	09 f0       	breq	.+2      	; 0x47c <main+0x52>
			}
		}
		wait(250);
 47a:	b1 df       	rcall	.-158    	; 0x3de <updateDisplayUnlocked>
 47c:	8a ef       	ldi	r24, 0xFA	; 250
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	c3 df       	rcall	.-122    	; 0x408 <wait>
    }
 482:	e2 cf       	rjmp	.-60     	; 0x448 <main+0x1e>

00000484 <__divsf3>:
 484:	0c d0       	rcall	.+24     	; 0x49e <__divsf3x>
 486:	eb c0       	rjmp	.+470    	; 0x65e <__fp_round>
 488:	e3 d0       	rcall	.+454    	; 0x650 <__fp_pscB>
 48a:	40 f0       	brcs	.+16     	; 0x49c <__divsf3+0x18>
 48c:	da d0       	rcall	.+436    	; 0x642 <__fp_pscA>
 48e:	30 f0       	brcs	.+12     	; 0x49c <__divsf3+0x18>
 490:	21 f4       	brne	.+8      	; 0x49a <__divsf3+0x16>
 492:	5f 3f       	cpi	r21, 0xFF	; 255
 494:	19 f0       	breq	.+6      	; 0x49c <__divsf3+0x18>
 496:	cc c0       	rjmp	.+408    	; 0x630 <__fp_inf>
 498:	51 11       	cpse	r21, r1
 49a:	15 c1       	rjmp	.+554    	; 0x6c6 <__fp_szero>
 49c:	cf c0       	rjmp	.+414    	; 0x63c <__fp_nan>

0000049e <__divsf3x>:
 49e:	f0 d0       	rcall	.+480    	; 0x680 <__fp_split3>
 4a0:	98 f3       	brcs	.-26     	; 0x488 <__divsf3+0x4>

000004a2 <__divsf3_pse>:
 4a2:	99 23       	and	r25, r25
 4a4:	c9 f3       	breq	.-14     	; 0x498 <__divsf3+0x14>
 4a6:	55 23       	and	r21, r21
 4a8:	b1 f3       	breq	.-20     	; 0x496 <__divsf3+0x12>
 4aa:	95 1b       	sub	r25, r21
 4ac:	55 0b       	sbc	r21, r21
 4ae:	bb 27       	eor	r27, r27
 4b0:	aa 27       	eor	r26, r26
 4b2:	62 17       	cp	r22, r18
 4b4:	73 07       	cpc	r23, r19
 4b6:	84 07       	cpc	r24, r20
 4b8:	38 f0       	brcs	.+14     	; 0x4c8 <__divsf3_pse+0x26>
 4ba:	9f 5f       	subi	r25, 0xFF	; 255
 4bc:	5f 4f       	sbci	r21, 0xFF	; 255
 4be:	22 0f       	add	r18, r18
 4c0:	33 1f       	adc	r19, r19
 4c2:	44 1f       	adc	r20, r20
 4c4:	aa 1f       	adc	r26, r26
 4c6:	a9 f3       	breq	.-22     	; 0x4b2 <__divsf3_pse+0x10>
 4c8:	33 d0       	rcall	.+102    	; 0x530 <__divsf3_pse+0x8e>
 4ca:	0e 2e       	mov	r0, r30
 4cc:	3a f0       	brmi	.+14     	; 0x4dc <__divsf3_pse+0x3a>
 4ce:	e0 e8       	ldi	r30, 0x80	; 128
 4d0:	30 d0       	rcall	.+96     	; 0x532 <__divsf3_pse+0x90>
 4d2:	91 50       	subi	r25, 0x01	; 1
 4d4:	50 40       	sbci	r21, 0x00	; 0
 4d6:	e6 95       	lsr	r30
 4d8:	00 1c       	adc	r0, r0
 4da:	ca f7       	brpl	.-14     	; 0x4ce <__divsf3_pse+0x2c>
 4dc:	29 d0       	rcall	.+82     	; 0x530 <__divsf3_pse+0x8e>
 4de:	fe 2f       	mov	r31, r30
 4e0:	27 d0       	rcall	.+78     	; 0x530 <__divsf3_pse+0x8e>
 4e2:	66 0f       	add	r22, r22
 4e4:	77 1f       	adc	r23, r23
 4e6:	88 1f       	adc	r24, r24
 4e8:	bb 1f       	adc	r27, r27
 4ea:	26 17       	cp	r18, r22
 4ec:	37 07       	cpc	r19, r23
 4ee:	48 07       	cpc	r20, r24
 4f0:	ab 07       	cpc	r26, r27
 4f2:	b0 e8       	ldi	r27, 0x80	; 128
 4f4:	09 f0       	breq	.+2      	; 0x4f8 <__divsf3_pse+0x56>
 4f6:	bb 0b       	sbc	r27, r27
 4f8:	80 2d       	mov	r24, r0
 4fa:	bf 01       	movw	r22, r30
 4fc:	ff 27       	eor	r31, r31
 4fe:	93 58       	subi	r25, 0x83	; 131
 500:	5f 4f       	sbci	r21, 0xFF	; 255
 502:	2a f0       	brmi	.+10     	; 0x50e <__divsf3_pse+0x6c>
 504:	9e 3f       	cpi	r25, 0xFE	; 254
 506:	51 05       	cpc	r21, r1
 508:	68 f0       	brcs	.+26     	; 0x524 <__divsf3_pse+0x82>
 50a:	92 c0       	rjmp	.+292    	; 0x630 <__fp_inf>
 50c:	dc c0       	rjmp	.+440    	; 0x6c6 <__fp_szero>
 50e:	5f 3f       	cpi	r21, 0xFF	; 255
 510:	ec f3       	brlt	.-6      	; 0x50c <__divsf3_pse+0x6a>
 512:	98 3e       	cpi	r25, 0xE8	; 232
 514:	dc f3       	brlt	.-10     	; 0x50c <__divsf3_pse+0x6a>
 516:	86 95       	lsr	r24
 518:	77 95       	ror	r23
 51a:	67 95       	ror	r22
 51c:	b7 95       	ror	r27
 51e:	f7 95       	ror	r31
 520:	9f 5f       	subi	r25, 0xFF	; 255
 522:	c9 f7       	brne	.-14     	; 0x516 <__divsf3_pse+0x74>
 524:	88 0f       	add	r24, r24
 526:	91 1d       	adc	r25, r1
 528:	96 95       	lsr	r25
 52a:	87 95       	ror	r24
 52c:	97 f9       	bld	r25, 7
 52e:	08 95       	ret
 530:	e1 e0       	ldi	r30, 0x01	; 1
 532:	66 0f       	add	r22, r22
 534:	77 1f       	adc	r23, r23
 536:	88 1f       	adc	r24, r24
 538:	bb 1f       	adc	r27, r27
 53a:	62 17       	cp	r22, r18
 53c:	73 07       	cpc	r23, r19
 53e:	84 07       	cpc	r24, r20
 540:	ba 07       	cpc	r27, r26
 542:	20 f0       	brcs	.+8      	; 0x54c <__divsf3_pse+0xaa>
 544:	62 1b       	sub	r22, r18
 546:	73 0b       	sbc	r23, r19
 548:	84 0b       	sbc	r24, r20
 54a:	ba 0b       	sbc	r27, r26
 54c:	ee 1f       	adc	r30, r30
 54e:	88 f7       	brcc	.-30     	; 0x532 <__divsf3_pse+0x90>
 550:	e0 95       	com	r30
 552:	08 95       	ret

00000554 <__fixsfsi>:
 554:	04 d0       	rcall	.+8      	; 0x55e <__fixunssfsi>
 556:	68 94       	set
 558:	b1 11       	cpse	r27, r1
 55a:	b5 c0       	rjmp	.+362    	; 0x6c6 <__fp_szero>
 55c:	08 95       	ret

0000055e <__fixunssfsi>:
 55e:	98 d0       	rcall	.+304    	; 0x690 <__fp_splitA>
 560:	88 f0       	brcs	.+34     	; 0x584 <__fixunssfsi+0x26>
 562:	9f 57       	subi	r25, 0x7F	; 127
 564:	90 f0       	brcs	.+36     	; 0x58a <__fixunssfsi+0x2c>
 566:	b9 2f       	mov	r27, r25
 568:	99 27       	eor	r25, r25
 56a:	b7 51       	subi	r27, 0x17	; 23
 56c:	a0 f0       	brcs	.+40     	; 0x596 <__fixunssfsi+0x38>
 56e:	d1 f0       	breq	.+52     	; 0x5a4 <__fixunssfsi+0x46>
 570:	66 0f       	add	r22, r22
 572:	77 1f       	adc	r23, r23
 574:	88 1f       	adc	r24, r24
 576:	99 1f       	adc	r25, r25
 578:	1a f0       	brmi	.+6      	; 0x580 <__fixunssfsi+0x22>
 57a:	ba 95       	dec	r27
 57c:	c9 f7       	brne	.-14     	; 0x570 <__fixunssfsi+0x12>
 57e:	12 c0       	rjmp	.+36     	; 0x5a4 <__fixunssfsi+0x46>
 580:	b1 30       	cpi	r27, 0x01	; 1
 582:	81 f0       	breq	.+32     	; 0x5a4 <__fixunssfsi+0x46>
 584:	9f d0       	rcall	.+318    	; 0x6c4 <__fp_zero>
 586:	b1 e0       	ldi	r27, 0x01	; 1
 588:	08 95       	ret
 58a:	9c c0       	rjmp	.+312    	; 0x6c4 <__fp_zero>
 58c:	67 2f       	mov	r22, r23
 58e:	78 2f       	mov	r23, r24
 590:	88 27       	eor	r24, r24
 592:	b8 5f       	subi	r27, 0xF8	; 248
 594:	39 f0       	breq	.+14     	; 0x5a4 <__fixunssfsi+0x46>
 596:	b9 3f       	cpi	r27, 0xF9	; 249
 598:	cc f3       	brlt	.-14     	; 0x58c <__fixunssfsi+0x2e>
 59a:	86 95       	lsr	r24
 59c:	77 95       	ror	r23
 59e:	67 95       	ror	r22
 5a0:	b3 95       	inc	r27
 5a2:	d9 f7       	brne	.-10     	; 0x59a <__fixunssfsi+0x3c>
 5a4:	3e f4       	brtc	.+14     	; 0x5b4 <__fixunssfsi+0x56>
 5a6:	90 95       	com	r25
 5a8:	80 95       	com	r24
 5aa:	70 95       	com	r23
 5ac:	61 95       	neg	r22
 5ae:	7f 4f       	sbci	r23, 0xFF	; 255
 5b0:	8f 4f       	sbci	r24, 0xFF	; 255
 5b2:	9f 4f       	sbci	r25, 0xFF	; 255
 5b4:	08 95       	ret

000005b6 <__floatunsisf>:
 5b6:	e8 94       	clt
 5b8:	09 c0       	rjmp	.+18     	; 0x5cc <__floatsisf+0x12>

000005ba <__floatsisf>:
 5ba:	97 fb       	bst	r25, 7
 5bc:	3e f4       	brtc	.+14     	; 0x5cc <__floatsisf+0x12>
 5be:	90 95       	com	r25
 5c0:	80 95       	com	r24
 5c2:	70 95       	com	r23
 5c4:	61 95       	neg	r22
 5c6:	7f 4f       	sbci	r23, 0xFF	; 255
 5c8:	8f 4f       	sbci	r24, 0xFF	; 255
 5ca:	9f 4f       	sbci	r25, 0xFF	; 255
 5cc:	99 23       	and	r25, r25
 5ce:	a9 f0       	breq	.+42     	; 0x5fa <__floatsisf+0x40>
 5d0:	f9 2f       	mov	r31, r25
 5d2:	96 e9       	ldi	r25, 0x96	; 150
 5d4:	bb 27       	eor	r27, r27
 5d6:	93 95       	inc	r25
 5d8:	f6 95       	lsr	r31
 5da:	87 95       	ror	r24
 5dc:	77 95       	ror	r23
 5de:	67 95       	ror	r22
 5e0:	b7 95       	ror	r27
 5e2:	f1 11       	cpse	r31, r1
 5e4:	f8 cf       	rjmp	.-16     	; 0x5d6 <__floatsisf+0x1c>
 5e6:	fa f4       	brpl	.+62     	; 0x626 <__floatsisf+0x6c>
 5e8:	bb 0f       	add	r27, r27
 5ea:	11 f4       	brne	.+4      	; 0x5f0 <__floatsisf+0x36>
 5ec:	60 ff       	sbrs	r22, 0
 5ee:	1b c0       	rjmp	.+54     	; 0x626 <__floatsisf+0x6c>
 5f0:	6f 5f       	subi	r22, 0xFF	; 255
 5f2:	7f 4f       	sbci	r23, 0xFF	; 255
 5f4:	8f 4f       	sbci	r24, 0xFF	; 255
 5f6:	9f 4f       	sbci	r25, 0xFF	; 255
 5f8:	16 c0       	rjmp	.+44     	; 0x626 <__floatsisf+0x6c>
 5fa:	88 23       	and	r24, r24
 5fc:	11 f0       	breq	.+4      	; 0x602 <__floatsisf+0x48>
 5fe:	96 e9       	ldi	r25, 0x96	; 150
 600:	11 c0       	rjmp	.+34     	; 0x624 <__floatsisf+0x6a>
 602:	77 23       	and	r23, r23
 604:	21 f0       	breq	.+8      	; 0x60e <__floatsisf+0x54>
 606:	9e e8       	ldi	r25, 0x8E	; 142
 608:	87 2f       	mov	r24, r23
 60a:	76 2f       	mov	r23, r22
 60c:	05 c0       	rjmp	.+10     	; 0x618 <__floatsisf+0x5e>
 60e:	66 23       	and	r22, r22
 610:	71 f0       	breq	.+28     	; 0x62e <__floatsisf+0x74>
 612:	96 e8       	ldi	r25, 0x86	; 134
 614:	86 2f       	mov	r24, r22
 616:	70 e0       	ldi	r23, 0x00	; 0
 618:	60 e0       	ldi	r22, 0x00	; 0
 61a:	2a f0       	brmi	.+10     	; 0x626 <__floatsisf+0x6c>
 61c:	9a 95       	dec	r25
 61e:	66 0f       	add	r22, r22
 620:	77 1f       	adc	r23, r23
 622:	88 1f       	adc	r24, r24
 624:	da f7       	brpl	.-10     	; 0x61c <__floatsisf+0x62>
 626:	88 0f       	add	r24, r24
 628:	96 95       	lsr	r25
 62a:	87 95       	ror	r24
 62c:	97 f9       	bld	r25, 7
 62e:	08 95       	ret

00000630 <__fp_inf>:
 630:	97 f9       	bld	r25, 7
 632:	9f 67       	ori	r25, 0x7F	; 127
 634:	80 e8       	ldi	r24, 0x80	; 128
 636:	70 e0       	ldi	r23, 0x00	; 0
 638:	60 e0       	ldi	r22, 0x00	; 0
 63a:	08 95       	ret

0000063c <__fp_nan>:
 63c:	9f ef       	ldi	r25, 0xFF	; 255
 63e:	80 ec       	ldi	r24, 0xC0	; 192
 640:	08 95       	ret

00000642 <__fp_pscA>:
 642:	00 24       	eor	r0, r0
 644:	0a 94       	dec	r0
 646:	16 16       	cp	r1, r22
 648:	17 06       	cpc	r1, r23
 64a:	18 06       	cpc	r1, r24
 64c:	09 06       	cpc	r0, r25
 64e:	08 95       	ret

00000650 <__fp_pscB>:
 650:	00 24       	eor	r0, r0
 652:	0a 94       	dec	r0
 654:	12 16       	cp	r1, r18
 656:	13 06       	cpc	r1, r19
 658:	14 06       	cpc	r1, r20
 65a:	05 06       	cpc	r0, r21
 65c:	08 95       	ret

0000065e <__fp_round>:
 65e:	09 2e       	mov	r0, r25
 660:	03 94       	inc	r0
 662:	00 0c       	add	r0, r0
 664:	11 f4       	brne	.+4      	; 0x66a <__fp_round+0xc>
 666:	88 23       	and	r24, r24
 668:	52 f0       	brmi	.+20     	; 0x67e <__fp_round+0x20>
 66a:	bb 0f       	add	r27, r27
 66c:	40 f4       	brcc	.+16     	; 0x67e <__fp_round+0x20>
 66e:	bf 2b       	or	r27, r31
 670:	11 f4       	brne	.+4      	; 0x676 <__fp_round+0x18>
 672:	60 ff       	sbrs	r22, 0
 674:	04 c0       	rjmp	.+8      	; 0x67e <__fp_round+0x20>
 676:	6f 5f       	subi	r22, 0xFF	; 255
 678:	7f 4f       	sbci	r23, 0xFF	; 255
 67a:	8f 4f       	sbci	r24, 0xFF	; 255
 67c:	9f 4f       	sbci	r25, 0xFF	; 255
 67e:	08 95       	ret

00000680 <__fp_split3>:
 680:	57 fd       	sbrc	r21, 7
 682:	90 58       	subi	r25, 0x80	; 128
 684:	44 0f       	add	r20, r20
 686:	55 1f       	adc	r21, r21
 688:	59 f0       	breq	.+22     	; 0x6a0 <__fp_splitA+0x10>
 68a:	5f 3f       	cpi	r21, 0xFF	; 255
 68c:	71 f0       	breq	.+28     	; 0x6aa <__fp_splitA+0x1a>
 68e:	47 95       	ror	r20

00000690 <__fp_splitA>:
 690:	88 0f       	add	r24, r24
 692:	97 fb       	bst	r25, 7
 694:	99 1f       	adc	r25, r25
 696:	61 f0       	breq	.+24     	; 0x6b0 <__fp_splitA+0x20>
 698:	9f 3f       	cpi	r25, 0xFF	; 255
 69a:	79 f0       	breq	.+30     	; 0x6ba <__fp_splitA+0x2a>
 69c:	87 95       	ror	r24
 69e:	08 95       	ret
 6a0:	12 16       	cp	r1, r18
 6a2:	13 06       	cpc	r1, r19
 6a4:	14 06       	cpc	r1, r20
 6a6:	55 1f       	adc	r21, r21
 6a8:	f2 cf       	rjmp	.-28     	; 0x68e <__fp_split3+0xe>
 6aa:	46 95       	lsr	r20
 6ac:	f1 df       	rcall	.-30     	; 0x690 <__fp_splitA>
 6ae:	08 c0       	rjmp	.+16     	; 0x6c0 <__fp_splitA+0x30>
 6b0:	16 16       	cp	r1, r22
 6b2:	17 06       	cpc	r1, r23
 6b4:	18 06       	cpc	r1, r24
 6b6:	99 1f       	adc	r25, r25
 6b8:	f1 cf       	rjmp	.-30     	; 0x69c <__fp_splitA+0xc>
 6ba:	86 95       	lsr	r24
 6bc:	71 05       	cpc	r23, r1
 6be:	61 05       	cpc	r22, r1
 6c0:	08 94       	sec
 6c2:	08 95       	ret

000006c4 <__fp_zero>:
 6c4:	e8 94       	clt

000006c6 <__fp_szero>:
 6c6:	bb 27       	eor	r27, r27
 6c8:	66 27       	eor	r22, r22
 6ca:	77 27       	eor	r23, r23
 6cc:	cb 01       	movw	r24, r22
 6ce:	97 f9       	bld	r25, 7
 6d0:	08 95       	ret

000006d2 <__mulsf3>:
 6d2:	0b d0       	rcall	.+22     	; 0x6ea <__mulsf3x>
 6d4:	c4 cf       	rjmp	.-120    	; 0x65e <__fp_round>
 6d6:	b5 df       	rcall	.-150    	; 0x642 <__fp_pscA>
 6d8:	28 f0       	brcs	.+10     	; 0x6e4 <__mulsf3+0x12>
 6da:	ba df       	rcall	.-140    	; 0x650 <__fp_pscB>
 6dc:	18 f0       	brcs	.+6      	; 0x6e4 <__mulsf3+0x12>
 6de:	95 23       	and	r25, r21
 6e0:	09 f0       	breq	.+2      	; 0x6e4 <__mulsf3+0x12>
 6e2:	a6 cf       	rjmp	.-180    	; 0x630 <__fp_inf>
 6e4:	ab cf       	rjmp	.-170    	; 0x63c <__fp_nan>
 6e6:	11 24       	eor	r1, r1
 6e8:	ee cf       	rjmp	.-36     	; 0x6c6 <__fp_szero>

000006ea <__mulsf3x>:
 6ea:	ca df       	rcall	.-108    	; 0x680 <__fp_split3>
 6ec:	a0 f3       	brcs	.-24     	; 0x6d6 <__mulsf3+0x4>

000006ee <__mulsf3_pse>:
 6ee:	95 9f       	mul	r25, r21
 6f0:	d1 f3       	breq	.-12     	; 0x6e6 <__mulsf3+0x14>
 6f2:	95 0f       	add	r25, r21
 6f4:	50 e0       	ldi	r21, 0x00	; 0
 6f6:	55 1f       	adc	r21, r21
 6f8:	62 9f       	mul	r22, r18
 6fa:	f0 01       	movw	r30, r0
 6fc:	72 9f       	mul	r23, r18
 6fe:	bb 27       	eor	r27, r27
 700:	f0 0d       	add	r31, r0
 702:	b1 1d       	adc	r27, r1
 704:	63 9f       	mul	r22, r19
 706:	aa 27       	eor	r26, r26
 708:	f0 0d       	add	r31, r0
 70a:	b1 1d       	adc	r27, r1
 70c:	aa 1f       	adc	r26, r26
 70e:	64 9f       	mul	r22, r20
 710:	66 27       	eor	r22, r22
 712:	b0 0d       	add	r27, r0
 714:	a1 1d       	adc	r26, r1
 716:	66 1f       	adc	r22, r22
 718:	82 9f       	mul	r24, r18
 71a:	22 27       	eor	r18, r18
 71c:	b0 0d       	add	r27, r0
 71e:	a1 1d       	adc	r26, r1
 720:	62 1f       	adc	r22, r18
 722:	73 9f       	mul	r23, r19
 724:	b0 0d       	add	r27, r0
 726:	a1 1d       	adc	r26, r1
 728:	62 1f       	adc	r22, r18
 72a:	83 9f       	mul	r24, r19
 72c:	a0 0d       	add	r26, r0
 72e:	61 1d       	adc	r22, r1
 730:	22 1f       	adc	r18, r18
 732:	74 9f       	mul	r23, r20
 734:	33 27       	eor	r19, r19
 736:	a0 0d       	add	r26, r0
 738:	61 1d       	adc	r22, r1
 73a:	23 1f       	adc	r18, r19
 73c:	84 9f       	mul	r24, r20
 73e:	60 0d       	add	r22, r0
 740:	21 1d       	adc	r18, r1
 742:	82 2f       	mov	r24, r18
 744:	76 2f       	mov	r23, r22
 746:	6a 2f       	mov	r22, r26
 748:	11 24       	eor	r1, r1
 74a:	9f 57       	subi	r25, 0x7F	; 127
 74c:	50 40       	sbci	r21, 0x00	; 0
 74e:	8a f0       	brmi	.+34     	; 0x772 <__mulsf3_pse+0x84>
 750:	e1 f0       	breq	.+56     	; 0x78a <__mulsf3_pse+0x9c>
 752:	88 23       	and	r24, r24
 754:	4a f0       	brmi	.+18     	; 0x768 <__mulsf3_pse+0x7a>
 756:	ee 0f       	add	r30, r30
 758:	ff 1f       	adc	r31, r31
 75a:	bb 1f       	adc	r27, r27
 75c:	66 1f       	adc	r22, r22
 75e:	77 1f       	adc	r23, r23
 760:	88 1f       	adc	r24, r24
 762:	91 50       	subi	r25, 0x01	; 1
 764:	50 40       	sbci	r21, 0x00	; 0
 766:	a9 f7       	brne	.-22     	; 0x752 <__mulsf3_pse+0x64>
 768:	9e 3f       	cpi	r25, 0xFE	; 254
 76a:	51 05       	cpc	r21, r1
 76c:	70 f0       	brcs	.+28     	; 0x78a <__mulsf3_pse+0x9c>
 76e:	60 cf       	rjmp	.-320    	; 0x630 <__fp_inf>
 770:	aa cf       	rjmp	.-172    	; 0x6c6 <__fp_szero>
 772:	5f 3f       	cpi	r21, 0xFF	; 255
 774:	ec f3       	brlt	.-6      	; 0x770 <__mulsf3_pse+0x82>
 776:	98 3e       	cpi	r25, 0xE8	; 232
 778:	dc f3       	brlt	.-10     	; 0x770 <__mulsf3_pse+0x82>
 77a:	86 95       	lsr	r24
 77c:	77 95       	ror	r23
 77e:	67 95       	ror	r22
 780:	b7 95       	ror	r27
 782:	f7 95       	ror	r31
 784:	e7 95       	ror	r30
 786:	9f 5f       	subi	r25, 0xFF	; 255
 788:	c1 f7       	brne	.-16     	; 0x77a <__mulsf3_pse+0x8c>
 78a:	fe 2b       	or	r31, r30
 78c:	88 0f       	add	r24, r24
 78e:	91 1d       	adc	r25, r1
 790:	96 95       	lsr	r25
 792:	87 95       	ror	r24
 794:	97 f9       	bld	r25, 7
 796:	08 95       	ret

00000798 <sprintf>:
 798:	0f 93       	push	r16
 79a:	1f 93       	push	r17
 79c:	cf 93       	push	r28
 79e:	df 93       	push	r29
 7a0:	cd b7       	in	r28, 0x3d	; 61
 7a2:	de b7       	in	r29, 0x3e	; 62
 7a4:	2e 97       	sbiw	r28, 0x0e	; 14
 7a6:	0f b6       	in	r0, 0x3f	; 63
 7a8:	f8 94       	cli
 7aa:	de bf       	out	0x3e, r29	; 62
 7ac:	0f be       	out	0x3f, r0	; 63
 7ae:	cd bf       	out	0x3d, r28	; 61
 7b0:	0d 89       	ldd	r16, Y+21	; 0x15
 7b2:	1e 89       	ldd	r17, Y+22	; 0x16
 7b4:	86 e0       	ldi	r24, 0x06	; 6
 7b6:	8c 83       	std	Y+4, r24	; 0x04
 7b8:	1a 83       	std	Y+2, r17	; 0x02
 7ba:	09 83       	std	Y+1, r16	; 0x01
 7bc:	8f ef       	ldi	r24, 0xFF	; 255
 7be:	9f e7       	ldi	r25, 0x7F	; 127
 7c0:	9e 83       	std	Y+6, r25	; 0x06
 7c2:	8d 83       	std	Y+5, r24	; 0x05
 7c4:	ae 01       	movw	r20, r28
 7c6:	47 5e       	subi	r20, 0xE7	; 231
 7c8:	5f 4f       	sbci	r21, 0xFF	; 255
 7ca:	6f 89       	ldd	r22, Y+23	; 0x17
 7cc:	78 8d       	ldd	r23, Y+24	; 0x18
 7ce:	ce 01       	movw	r24, r28
 7d0:	01 96       	adiw	r24, 0x01	; 1
 7d2:	10 d0       	rcall	.+32     	; 0x7f4 <vfprintf>
 7d4:	ef 81       	ldd	r30, Y+7	; 0x07
 7d6:	f8 85       	ldd	r31, Y+8	; 0x08
 7d8:	e0 0f       	add	r30, r16
 7da:	f1 1f       	adc	r31, r17
 7dc:	10 82       	st	Z, r1
 7de:	2e 96       	adiw	r28, 0x0e	; 14
 7e0:	0f b6       	in	r0, 0x3f	; 63
 7e2:	f8 94       	cli
 7e4:	de bf       	out	0x3e, r29	; 62
 7e6:	0f be       	out	0x3f, r0	; 63
 7e8:	cd bf       	out	0x3d, r28	; 61
 7ea:	df 91       	pop	r29
 7ec:	cf 91       	pop	r28
 7ee:	1f 91       	pop	r17
 7f0:	0f 91       	pop	r16
 7f2:	08 95       	ret

000007f4 <vfprintf>:
 7f4:	2f 92       	push	r2
 7f6:	3f 92       	push	r3
 7f8:	4f 92       	push	r4
 7fa:	5f 92       	push	r5
 7fc:	6f 92       	push	r6
 7fe:	7f 92       	push	r7
 800:	8f 92       	push	r8
 802:	9f 92       	push	r9
 804:	af 92       	push	r10
 806:	bf 92       	push	r11
 808:	cf 92       	push	r12
 80a:	df 92       	push	r13
 80c:	ef 92       	push	r14
 80e:	ff 92       	push	r15
 810:	0f 93       	push	r16
 812:	1f 93       	push	r17
 814:	cf 93       	push	r28
 816:	df 93       	push	r29
 818:	cd b7       	in	r28, 0x3d	; 61
 81a:	de b7       	in	r29, 0x3e	; 62
 81c:	2b 97       	sbiw	r28, 0x0b	; 11
 81e:	0f b6       	in	r0, 0x3f	; 63
 820:	f8 94       	cli
 822:	de bf       	out	0x3e, r29	; 62
 824:	0f be       	out	0x3f, r0	; 63
 826:	cd bf       	out	0x3d, r28	; 61
 828:	6c 01       	movw	r12, r24
 82a:	7b 01       	movw	r14, r22
 82c:	8a 01       	movw	r16, r20
 82e:	fc 01       	movw	r30, r24
 830:	17 82       	std	Z+7, r1	; 0x07
 832:	16 82       	std	Z+6, r1	; 0x06
 834:	83 81       	ldd	r24, Z+3	; 0x03
 836:	81 ff       	sbrs	r24, 1
 838:	bf c1       	rjmp	.+894    	; 0xbb8 <vfprintf+0x3c4>
 83a:	ce 01       	movw	r24, r28
 83c:	01 96       	adiw	r24, 0x01	; 1
 83e:	3c 01       	movw	r6, r24
 840:	f6 01       	movw	r30, r12
 842:	93 81       	ldd	r25, Z+3	; 0x03
 844:	f7 01       	movw	r30, r14
 846:	93 fd       	sbrc	r25, 3
 848:	85 91       	lpm	r24, Z+
 84a:	93 ff       	sbrs	r25, 3
 84c:	81 91       	ld	r24, Z+
 84e:	7f 01       	movw	r14, r30
 850:	88 23       	and	r24, r24
 852:	09 f4       	brne	.+2      	; 0x856 <vfprintf+0x62>
 854:	ad c1       	rjmp	.+858    	; 0xbb0 <vfprintf+0x3bc>
 856:	85 32       	cpi	r24, 0x25	; 37
 858:	39 f4       	brne	.+14     	; 0x868 <vfprintf+0x74>
 85a:	93 fd       	sbrc	r25, 3
 85c:	85 91       	lpm	r24, Z+
 85e:	93 ff       	sbrs	r25, 3
 860:	81 91       	ld	r24, Z+
 862:	7f 01       	movw	r14, r30
 864:	85 32       	cpi	r24, 0x25	; 37
 866:	21 f4       	brne	.+8      	; 0x870 <vfprintf+0x7c>
 868:	b6 01       	movw	r22, r12
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	d6 d1       	rcall	.+940    	; 0xc1a <fputc>
 86e:	e8 cf       	rjmp	.-48     	; 0x840 <vfprintf+0x4c>
 870:	91 2c       	mov	r9, r1
 872:	21 2c       	mov	r2, r1
 874:	31 2c       	mov	r3, r1
 876:	ff e1       	ldi	r31, 0x1F	; 31
 878:	f3 15       	cp	r31, r3
 87a:	d8 f0       	brcs	.+54     	; 0x8b2 <vfprintf+0xbe>
 87c:	8b 32       	cpi	r24, 0x2B	; 43
 87e:	79 f0       	breq	.+30     	; 0x89e <vfprintf+0xaa>
 880:	38 f4       	brcc	.+14     	; 0x890 <vfprintf+0x9c>
 882:	80 32       	cpi	r24, 0x20	; 32
 884:	79 f0       	breq	.+30     	; 0x8a4 <vfprintf+0xb0>
 886:	83 32       	cpi	r24, 0x23	; 35
 888:	a1 f4       	brne	.+40     	; 0x8b2 <vfprintf+0xbe>
 88a:	23 2d       	mov	r18, r3
 88c:	20 61       	ori	r18, 0x10	; 16
 88e:	1d c0       	rjmp	.+58     	; 0x8ca <vfprintf+0xd6>
 890:	8d 32       	cpi	r24, 0x2D	; 45
 892:	61 f0       	breq	.+24     	; 0x8ac <vfprintf+0xb8>
 894:	80 33       	cpi	r24, 0x30	; 48
 896:	69 f4       	brne	.+26     	; 0x8b2 <vfprintf+0xbe>
 898:	23 2d       	mov	r18, r3
 89a:	21 60       	ori	r18, 0x01	; 1
 89c:	16 c0       	rjmp	.+44     	; 0x8ca <vfprintf+0xd6>
 89e:	83 2d       	mov	r24, r3
 8a0:	82 60       	ori	r24, 0x02	; 2
 8a2:	38 2e       	mov	r3, r24
 8a4:	e3 2d       	mov	r30, r3
 8a6:	e4 60       	ori	r30, 0x04	; 4
 8a8:	3e 2e       	mov	r3, r30
 8aa:	2a c0       	rjmp	.+84     	; 0x900 <vfprintf+0x10c>
 8ac:	f3 2d       	mov	r31, r3
 8ae:	f8 60       	ori	r31, 0x08	; 8
 8b0:	1d c0       	rjmp	.+58     	; 0x8ec <vfprintf+0xf8>
 8b2:	37 fc       	sbrc	r3, 7
 8b4:	2d c0       	rjmp	.+90     	; 0x910 <vfprintf+0x11c>
 8b6:	20 ed       	ldi	r18, 0xD0	; 208
 8b8:	28 0f       	add	r18, r24
 8ba:	2a 30       	cpi	r18, 0x0A	; 10
 8bc:	40 f0       	brcs	.+16     	; 0x8ce <vfprintf+0xda>
 8be:	8e 32       	cpi	r24, 0x2E	; 46
 8c0:	b9 f4       	brne	.+46     	; 0x8f0 <vfprintf+0xfc>
 8c2:	36 fc       	sbrc	r3, 6
 8c4:	75 c1       	rjmp	.+746    	; 0xbb0 <vfprintf+0x3bc>
 8c6:	23 2d       	mov	r18, r3
 8c8:	20 64       	ori	r18, 0x40	; 64
 8ca:	32 2e       	mov	r3, r18
 8cc:	19 c0       	rjmp	.+50     	; 0x900 <vfprintf+0x10c>
 8ce:	36 fe       	sbrs	r3, 6
 8d0:	06 c0       	rjmp	.+12     	; 0x8de <vfprintf+0xea>
 8d2:	8a e0       	ldi	r24, 0x0A	; 10
 8d4:	98 9e       	mul	r9, r24
 8d6:	20 0d       	add	r18, r0
 8d8:	11 24       	eor	r1, r1
 8da:	92 2e       	mov	r9, r18
 8dc:	11 c0       	rjmp	.+34     	; 0x900 <vfprintf+0x10c>
 8de:	ea e0       	ldi	r30, 0x0A	; 10
 8e0:	2e 9e       	mul	r2, r30
 8e2:	20 0d       	add	r18, r0
 8e4:	11 24       	eor	r1, r1
 8e6:	22 2e       	mov	r2, r18
 8e8:	f3 2d       	mov	r31, r3
 8ea:	f0 62       	ori	r31, 0x20	; 32
 8ec:	3f 2e       	mov	r3, r31
 8ee:	08 c0       	rjmp	.+16     	; 0x900 <vfprintf+0x10c>
 8f0:	8c 36       	cpi	r24, 0x6C	; 108
 8f2:	21 f4       	brne	.+8      	; 0x8fc <vfprintf+0x108>
 8f4:	83 2d       	mov	r24, r3
 8f6:	80 68       	ori	r24, 0x80	; 128
 8f8:	38 2e       	mov	r3, r24
 8fa:	02 c0       	rjmp	.+4      	; 0x900 <vfprintf+0x10c>
 8fc:	88 36       	cpi	r24, 0x68	; 104
 8fe:	41 f4       	brne	.+16     	; 0x910 <vfprintf+0x11c>
 900:	f7 01       	movw	r30, r14
 902:	93 fd       	sbrc	r25, 3
 904:	85 91       	lpm	r24, Z+
 906:	93 ff       	sbrs	r25, 3
 908:	81 91       	ld	r24, Z+
 90a:	7f 01       	movw	r14, r30
 90c:	81 11       	cpse	r24, r1
 90e:	b3 cf       	rjmp	.-154    	; 0x876 <vfprintf+0x82>
 910:	98 2f       	mov	r25, r24
 912:	9f 7d       	andi	r25, 0xDF	; 223
 914:	95 54       	subi	r25, 0x45	; 69
 916:	93 30       	cpi	r25, 0x03	; 3
 918:	28 f4       	brcc	.+10     	; 0x924 <vfprintf+0x130>
 91a:	0c 5f       	subi	r16, 0xFC	; 252
 91c:	1f 4f       	sbci	r17, 0xFF	; 255
 91e:	9f e3       	ldi	r25, 0x3F	; 63
 920:	99 83       	std	Y+1, r25	; 0x01
 922:	0d c0       	rjmp	.+26     	; 0x93e <vfprintf+0x14a>
 924:	83 36       	cpi	r24, 0x63	; 99
 926:	31 f0       	breq	.+12     	; 0x934 <vfprintf+0x140>
 928:	83 37       	cpi	r24, 0x73	; 115
 92a:	71 f0       	breq	.+28     	; 0x948 <vfprintf+0x154>
 92c:	83 35       	cpi	r24, 0x53	; 83
 92e:	09 f0       	breq	.+2      	; 0x932 <vfprintf+0x13e>
 930:	55 c0       	rjmp	.+170    	; 0x9dc <vfprintf+0x1e8>
 932:	20 c0       	rjmp	.+64     	; 0x974 <vfprintf+0x180>
 934:	f8 01       	movw	r30, r16
 936:	80 81       	ld	r24, Z
 938:	89 83       	std	Y+1, r24	; 0x01
 93a:	0e 5f       	subi	r16, 0xFE	; 254
 93c:	1f 4f       	sbci	r17, 0xFF	; 255
 93e:	88 24       	eor	r8, r8
 940:	83 94       	inc	r8
 942:	91 2c       	mov	r9, r1
 944:	53 01       	movw	r10, r6
 946:	12 c0       	rjmp	.+36     	; 0x96c <vfprintf+0x178>
 948:	28 01       	movw	r4, r16
 94a:	f2 e0       	ldi	r31, 0x02	; 2
 94c:	4f 0e       	add	r4, r31
 94e:	51 1c       	adc	r5, r1
 950:	f8 01       	movw	r30, r16
 952:	a0 80       	ld	r10, Z
 954:	b1 80       	ldd	r11, Z+1	; 0x01
 956:	36 fe       	sbrs	r3, 6
 958:	03 c0       	rjmp	.+6      	; 0x960 <vfprintf+0x16c>
 95a:	69 2d       	mov	r22, r9
 95c:	70 e0       	ldi	r23, 0x00	; 0
 95e:	02 c0       	rjmp	.+4      	; 0x964 <vfprintf+0x170>
 960:	6f ef       	ldi	r22, 0xFF	; 255
 962:	7f ef       	ldi	r23, 0xFF	; 255
 964:	c5 01       	movw	r24, r10
 966:	4e d1       	rcall	.+668    	; 0xc04 <strnlen>
 968:	4c 01       	movw	r8, r24
 96a:	82 01       	movw	r16, r4
 96c:	f3 2d       	mov	r31, r3
 96e:	ff 77       	andi	r31, 0x7F	; 127
 970:	3f 2e       	mov	r3, r31
 972:	15 c0       	rjmp	.+42     	; 0x99e <vfprintf+0x1aa>
 974:	28 01       	movw	r4, r16
 976:	22 e0       	ldi	r18, 0x02	; 2
 978:	42 0e       	add	r4, r18
 97a:	51 1c       	adc	r5, r1
 97c:	f8 01       	movw	r30, r16
 97e:	a0 80       	ld	r10, Z
 980:	b1 80       	ldd	r11, Z+1	; 0x01
 982:	36 fe       	sbrs	r3, 6
 984:	03 c0       	rjmp	.+6      	; 0x98c <vfprintf+0x198>
 986:	69 2d       	mov	r22, r9
 988:	70 e0       	ldi	r23, 0x00	; 0
 98a:	02 c0       	rjmp	.+4      	; 0x990 <vfprintf+0x19c>
 98c:	6f ef       	ldi	r22, 0xFF	; 255
 98e:	7f ef       	ldi	r23, 0xFF	; 255
 990:	c5 01       	movw	r24, r10
 992:	2d d1       	rcall	.+602    	; 0xbee <strnlen_P>
 994:	4c 01       	movw	r8, r24
 996:	f3 2d       	mov	r31, r3
 998:	f0 68       	ori	r31, 0x80	; 128
 99a:	3f 2e       	mov	r3, r31
 99c:	82 01       	movw	r16, r4
 99e:	33 fc       	sbrc	r3, 3
 9a0:	19 c0       	rjmp	.+50     	; 0x9d4 <vfprintf+0x1e0>
 9a2:	82 2d       	mov	r24, r2
 9a4:	90 e0       	ldi	r25, 0x00	; 0
 9a6:	88 16       	cp	r8, r24
 9a8:	99 06       	cpc	r9, r25
 9aa:	a0 f4       	brcc	.+40     	; 0x9d4 <vfprintf+0x1e0>
 9ac:	b6 01       	movw	r22, r12
 9ae:	80 e2       	ldi	r24, 0x20	; 32
 9b0:	90 e0       	ldi	r25, 0x00	; 0
 9b2:	33 d1       	rcall	.+614    	; 0xc1a <fputc>
 9b4:	2a 94       	dec	r2
 9b6:	f5 cf       	rjmp	.-22     	; 0x9a2 <vfprintf+0x1ae>
 9b8:	f5 01       	movw	r30, r10
 9ba:	37 fc       	sbrc	r3, 7
 9bc:	85 91       	lpm	r24, Z+
 9be:	37 fe       	sbrs	r3, 7
 9c0:	81 91       	ld	r24, Z+
 9c2:	5f 01       	movw	r10, r30
 9c4:	b6 01       	movw	r22, r12
 9c6:	90 e0       	ldi	r25, 0x00	; 0
 9c8:	28 d1       	rcall	.+592    	; 0xc1a <fputc>
 9ca:	21 10       	cpse	r2, r1
 9cc:	2a 94       	dec	r2
 9ce:	21 e0       	ldi	r18, 0x01	; 1
 9d0:	82 1a       	sub	r8, r18
 9d2:	91 08       	sbc	r9, r1
 9d4:	81 14       	cp	r8, r1
 9d6:	91 04       	cpc	r9, r1
 9d8:	79 f7       	brne	.-34     	; 0x9b8 <vfprintf+0x1c4>
 9da:	e1 c0       	rjmp	.+450    	; 0xb9e <vfprintf+0x3aa>
 9dc:	84 36       	cpi	r24, 0x64	; 100
 9de:	11 f0       	breq	.+4      	; 0x9e4 <vfprintf+0x1f0>
 9e0:	89 36       	cpi	r24, 0x69	; 105
 9e2:	39 f5       	brne	.+78     	; 0xa32 <vfprintf+0x23e>
 9e4:	f8 01       	movw	r30, r16
 9e6:	37 fe       	sbrs	r3, 7
 9e8:	07 c0       	rjmp	.+14     	; 0x9f8 <vfprintf+0x204>
 9ea:	60 81       	ld	r22, Z
 9ec:	71 81       	ldd	r23, Z+1	; 0x01
 9ee:	82 81       	ldd	r24, Z+2	; 0x02
 9f0:	93 81       	ldd	r25, Z+3	; 0x03
 9f2:	0c 5f       	subi	r16, 0xFC	; 252
 9f4:	1f 4f       	sbci	r17, 0xFF	; 255
 9f6:	08 c0       	rjmp	.+16     	; 0xa08 <vfprintf+0x214>
 9f8:	60 81       	ld	r22, Z
 9fa:	71 81       	ldd	r23, Z+1	; 0x01
 9fc:	07 2e       	mov	r0, r23
 9fe:	00 0c       	add	r0, r0
 a00:	88 0b       	sbc	r24, r24
 a02:	99 0b       	sbc	r25, r25
 a04:	0e 5f       	subi	r16, 0xFE	; 254
 a06:	1f 4f       	sbci	r17, 0xFF	; 255
 a08:	f3 2d       	mov	r31, r3
 a0a:	ff 76       	andi	r31, 0x6F	; 111
 a0c:	3f 2e       	mov	r3, r31
 a0e:	97 ff       	sbrs	r25, 7
 a10:	09 c0       	rjmp	.+18     	; 0xa24 <vfprintf+0x230>
 a12:	90 95       	com	r25
 a14:	80 95       	com	r24
 a16:	70 95       	com	r23
 a18:	61 95       	neg	r22
 a1a:	7f 4f       	sbci	r23, 0xFF	; 255
 a1c:	8f 4f       	sbci	r24, 0xFF	; 255
 a1e:	9f 4f       	sbci	r25, 0xFF	; 255
 a20:	f0 68       	ori	r31, 0x80	; 128
 a22:	3f 2e       	mov	r3, r31
 a24:	2a e0       	ldi	r18, 0x0A	; 10
 a26:	30 e0       	ldi	r19, 0x00	; 0
 a28:	a3 01       	movw	r20, r6
 a2a:	33 d1       	rcall	.+614    	; 0xc92 <__ultoa_invert>
 a2c:	88 2e       	mov	r8, r24
 a2e:	86 18       	sub	r8, r6
 a30:	44 c0       	rjmp	.+136    	; 0xaba <vfprintf+0x2c6>
 a32:	85 37       	cpi	r24, 0x75	; 117
 a34:	31 f4       	brne	.+12     	; 0xa42 <vfprintf+0x24e>
 a36:	23 2d       	mov	r18, r3
 a38:	2f 7e       	andi	r18, 0xEF	; 239
 a3a:	b2 2e       	mov	r11, r18
 a3c:	2a e0       	ldi	r18, 0x0A	; 10
 a3e:	30 e0       	ldi	r19, 0x00	; 0
 a40:	25 c0       	rjmp	.+74     	; 0xa8c <vfprintf+0x298>
 a42:	93 2d       	mov	r25, r3
 a44:	99 7f       	andi	r25, 0xF9	; 249
 a46:	b9 2e       	mov	r11, r25
 a48:	8f 36       	cpi	r24, 0x6F	; 111
 a4a:	c1 f0       	breq	.+48     	; 0xa7c <vfprintf+0x288>
 a4c:	18 f4       	brcc	.+6      	; 0xa54 <vfprintf+0x260>
 a4e:	88 35       	cpi	r24, 0x58	; 88
 a50:	79 f0       	breq	.+30     	; 0xa70 <vfprintf+0x27c>
 a52:	ae c0       	rjmp	.+348    	; 0xbb0 <vfprintf+0x3bc>
 a54:	80 37       	cpi	r24, 0x70	; 112
 a56:	19 f0       	breq	.+6      	; 0xa5e <vfprintf+0x26a>
 a58:	88 37       	cpi	r24, 0x78	; 120
 a5a:	21 f0       	breq	.+8      	; 0xa64 <vfprintf+0x270>
 a5c:	a9 c0       	rjmp	.+338    	; 0xbb0 <vfprintf+0x3bc>
 a5e:	e9 2f       	mov	r30, r25
 a60:	e0 61       	ori	r30, 0x10	; 16
 a62:	be 2e       	mov	r11, r30
 a64:	b4 fe       	sbrs	r11, 4
 a66:	0d c0       	rjmp	.+26     	; 0xa82 <vfprintf+0x28e>
 a68:	fb 2d       	mov	r31, r11
 a6a:	f4 60       	ori	r31, 0x04	; 4
 a6c:	bf 2e       	mov	r11, r31
 a6e:	09 c0       	rjmp	.+18     	; 0xa82 <vfprintf+0x28e>
 a70:	34 fe       	sbrs	r3, 4
 a72:	0a c0       	rjmp	.+20     	; 0xa88 <vfprintf+0x294>
 a74:	29 2f       	mov	r18, r25
 a76:	26 60       	ori	r18, 0x06	; 6
 a78:	b2 2e       	mov	r11, r18
 a7a:	06 c0       	rjmp	.+12     	; 0xa88 <vfprintf+0x294>
 a7c:	28 e0       	ldi	r18, 0x08	; 8
 a7e:	30 e0       	ldi	r19, 0x00	; 0
 a80:	05 c0       	rjmp	.+10     	; 0xa8c <vfprintf+0x298>
 a82:	20 e1       	ldi	r18, 0x10	; 16
 a84:	30 e0       	ldi	r19, 0x00	; 0
 a86:	02 c0       	rjmp	.+4      	; 0xa8c <vfprintf+0x298>
 a88:	20 e1       	ldi	r18, 0x10	; 16
 a8a:	32 e0       	ldi	r19, 0x02	; 2
 a8c:	f8 01       	movw	r30, r16
 a8e:	b7 fe       	sbrs	r11, 7
 a90:	07 c0       	rjmp	.+14     	; 0xaa0 <vfprintf+0x2ac>
 a92:	60 81       	ld	r22, Z
 a94:	71 81       	ldd	r23, Z+1	; 0x01
 a96:	82 81       	ldd	r24, Z+2	; 0x02
 a98:	93 81       	ldd	r25, Z+3	; 0x03
 a9a:	0c 5f       	subi	r16, 0xFC	; 252
 a9c:	1f 4f       	sbci	r17, 0xFF	; 255
 a9e:	06 c0       	rjmp	.+12     	; 0xaac <vfprintf+0x2b8>
 aa0:	60 81       	ld	r22, Z
 aa2:	71 81       	ldd	r23, Z+1	; 0x01
 aa4:	80 e0       	ldi	r24, 0x00	; 0
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	0e 5f       	subi	r16, 0xFE	; 254
 aaa:	1f 4f       	sbci	r17, 0xFF	; 255
 aac:	a3 01       	movw	r20, r6
 aae:	f1 d0       	rcall	.+482    	; 0xc92 <__ultoa_invert>
 ab0:	88 2e       	mov	r8, r24
 ab2:	86 18       	sub	r8, r6
 ab4:	fb 2d       	mov	r31, r11
 ab6:	ff 77       	andi	r31, 0x7F	; 127
 ab8:	3f 2e       	mov	r3, r31
 aba:	36 fe       	sbrs	r3, 6
 abc:	0d c0       	rjmp	.+26     	; 0xad8 <vfprintf+0x2e4>
 abe:	23 2d       	mov	r18, r3
 ac0:	2e 7f       	andi	r18, 0xFE	; 254
 ac2:	a2 2e       	mov	r10, r18
 ac4:	89 14       	cp	r8, r9
 ac6:	58 f4       	brcc	.+22     	; 0xade <vfprintf+0x2ea>
 ac8:	34 fe       	sbrs	r3, 4
 aca:	0b c0       	rjmp	.+22     	; 0xae2 <vfprintf+0x2ee>
 acc:	32 fc       	sbrc	r3, 2
 ace:	09 c0       	rjmp	.+18     	; 0xae2 <vfprintf+0x2ee>
 ad0:	83 2d       	mov	r24, r3
 ad2:	8e 7e       	andi	r24, 0xEE	; 238
 ad4:	a8 2e       	mov	r10, r24
 ad6:	05 c0       	rjmp	.+10     	; 0xae2 <vfprintf+0x2ee>
 ad8:	b8 2c       	mov	r11, r8
 ada:	a3 2c       	mov	r10, r3
 adc:	03 c0       	rjmp	.+6      	; 0xae4 <vfprintf+0x2f0>
 ade:	b8 2c       	mov	r11, r8
 ae0:	01 c0       	rjmp	.+2      	; 0xae4 <vfprintf+0x2f0>
 ae2:	b9 2c       	mov	r11, r9
 ae4:	a4 fe       	sbrs	r10, 4
 ae6:	0f c0       	rjmp	.+30     	; 0xb06 <vfprintf+0x312>
 ae8:	fe 01       	movw	r30, r28
 aea:	e8 0d       	add	r30, r8
 aec:	f1 1d       	adc	r31, r1
 aee:	80 81       	ld	r24, Z
 af0:	80 33       	cpi	r24, 0x30	; 48
 af2:	21 f4       	brne	.+8      	; 0xafc <vfprintf+0x308>
 af4:	9a 2d       	mov	r25, r10
 af6:	99 7e       	andi	r25, 0xE9	; 233
 af8:	a9 2e       	mov	r10, r25
 afa:	09 c0       	rjmp	.+18     	; 0xb0e <vfprintf+0x31a>
 afc:	a2 fe       	sbrs	r10, 2
 afe:	06 c0       	rjmp	.+12     	; 0xb0c <vfprintf+0x318>
 b00:	b3 94       	inc	r11
 b02:	b3 94       	inc	r11
 b04:	04 c0       	rjmp	.+8      	; 0xb0e <vfprintf+0x31a>
 b06:	8a 2d       	mov	r24, r10
 b08:	86 78       	andi	r24, 0x86	; 134
 b0a:	09 f0       	breq	.+2      	; 0xb0e <vfprintf+0x31a>
 b0c:	b3 94       	inc	r11
 b0e:	a3 fc       	sbrc	r10, 3
 b10:	10 c0       	rjmp	.+32     	; 0xb32 <vfprintf+0x33e>
 b12:	a0 fe       	sbrs	r10, 0
 b14:	06 c0       	rjmp	.+12     	; 0xb22 <vfprintf+0x32e>
 b16:	b2 14       	cp	r11, r2
 b18:	80 f4       	brcc	.+32     	; 0xb3a <vfprintf+0x346>
 b1a:	28 0c       	add	r2, r8
 b1c:	92 2c       	mov	r9, r2
 b1e:	9b 18       	sub	r9, r11
 b20:	0d c0       	rjmp	.+26     	; 0xb3c <vfprintf+0x348>
 b22:	b2 14       	cp	r11, r2
 b24:	58 f4       	brcc	.+22     	; 0xb3c <vfprintf+0x348>
 b26:	b6 01       	movw	r22, r12
 b28:	80 e2       	ldi	r24, 0x20	; 32
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	76 d0       	rcall	.+236    	; 0xc1a <fputc>
 b2e:	b3 94       	inc	r11
 b30:	f8 cf       	rjmp	.-16     	; 0xb22 <vfprintf+0x32e>
 b32:	b2 14       	cp	r11, r2
 b34:	18 f4       	brcc	.+6      	; 0xb3c <vfprintf+0x348>
 b36:	2b 18       	sub	r2, r11
 b38:	02 c0       	rjmp	.+4      	; 0xb3e <vfprintf+0x34a>
 b3a:	98 2c       	mov	r9, r8
 b3c:	21 2c       	mov	r2, r1
 b3e:	a4 fe       	sbrs	r10, 4
 b40:	0f c0       	rjmp	.+30     	; 0xb60 <vfprintf+0x36c>
 b42:	b6 01       	movw	r22, r12
 b44:	80 e3       	ldi	r24, 0x30	; 48
 b46:	90 e0       	ldi	r25, 0x00	; 0
 b48:	68 d0       	rcall	.+208    	; 0xc1a <fputc>
 b4a:	a2 fe       	sbrs	r10, 2
 b4c:	16 c0       	rjmp	.+44     	; 0xb7a <vfprintf+0x386>
 b4e:	a1 fc       	sbrc	r10, 1
 b50:	03 c0       	rjmp	.+6      	; 0xb58 <vfprintf+0x364>
 b52:	88 e7       	ldi	r24, 0x78	; 120
 b54:	90 e0       	ldi	r25, 0x00	; 0
 b56:	02 c0       	rjmp	.+4      	; 0xb5c <vfprintf+0x368>
 b58:	88 e5       	ldi	r24, 0x58	; 88
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	b6 01       	movw	r22, r12
 b5e:	0c c0       	rjmp	.+24     	; 0xb78 <vfprintf+0x384>
 b60:	8a 2d       	mov	r24, r10
 b62:	86 78       	andi	r24, 0x86	; 134
 b64:	51 f0       	breq	.+20     	; 0xb7a <vfprintf+0x386>
 b66:	a1 fe       	sbrs	r10, 1
 b68:	02 c0       	rjmp	.+4      	; 0xb6e <vfprintf+0x37a>
 b6a:	8b e2       	ldi	r24, 0x2B	; 43
 b6c:	01 c0       	rjmp	.+2      	; 0xb70 <vfprintf+0x37c>
 b6e:	80 e2       	ldi	r24, 0x20	; 32
 b70:	a7 fc       	sbrc	r10, 7
 b72:	8d e2       	ldi	r24, 0x2D	; 45
 b74:	b6 01       	movw	r22, r12
 b76:	90 e0       	ldi	r25, 0x00	; 0
 b78:	50 d0       	rcall	.+160    	; 0xc1a <fputc>
 b7a:	89 14       	cp	r8, r9
 b7c:	30 f4       	brcc	.+12     	; 0xb8a <vfprintf+0x396>
 b7e:	b6 01       	movw	r22, r12
 b80:	80 e3       	ldi	r24, 0x30	; 48
 b82:	90 e0       	ldi	r25, 0x00	; 0
 b84:	4a d0       	rcall	.+148    	; 0xc1a <fputc>
 b86:	9a 94       	dec	r9
 b88:	f8 cf       	rjmp	.-16     	; 0xb7a <vfprintf+0x386>
 b8a:	8a 94       	dec	r8
 b8c:	f3 01       	movw	r30, r6
 b8e:	e8 0d       	add	r30, r8
 b90:	f1 1d       	adc	r31, r1
 b92:	80 81       	ld	r24, Z
 b94:	b6 01       	movw	r22, r12
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	40 d0       	rcall	.+128    	; 0xc1a <fputc>
 b9a:	81 10       	cpse	r8, r1
 b9c:	f6 cf       	rjmp	.-20     	; 0xb8a <vfprintf+0x396>
 b9e:	22 20       	and	r2, r2
 ba0:	09 f4       	brne	.+2      	; 0xba4 <vfprintf+0x3b0>
 ba2:	4e ce       	rjmp	.-868    	; 0x840 <vfprintf+0x4c>
 ba4:	b6 01       	movw	r22, r12
 ba6:	80 e2       	ldi	r24, 0x20	; 32
 ba8:	90 e0       	ldi	r25, 0x00	; 0
 baa:	37 d0       	rcall	.+110    	; 0xc1a <fputc>
 bac:	2a 94       	dec	r2
 bae:	f7 cf       	rjmp	.-18     	; 0xb9e <vfprintf+0x3aa>
 bb0:	f6 01       	movw	r30, r12
 bb2:	86 81       	ldd	r24, Z+6	; 0x06
 bb4:	97 81       	ldd	r25, Z+7	; 0x07
 bb6:	02 c0       	rjmp	.+4      	; 0xbbc <vfprintf+0x3c8>
 bb8:	8f ef       	ldi	r24, 0xFF	; 255
 bba:	9f ef       	ldi	r25, 0xFF	; 255
 bbc:	2b 96       	adiw	r28, 0x0b	; 11
 bbe:	0f b6       	in	r0, 0x3f	; 63
 bc0:	f8 94       	cli
 bc2:	de bf       	out	0x3e, r29	; 62
 bc4:	0f be       	out	0x3f, r0	; 63
 bc6:	cd bf       	out	0x3d, r28	; 61
 bc8:	df 91       	pop	r29
 bca:	cf 91       	pop	r28
 bcc:	1f 91       	pop	r17
 bce:	0f 91       	pop	r16
 bd0:	ff 90       	pop	r15
 bd2:	ef 90       	pop	r14
 bd4:	df 90       	pop	r13
 bd6:	cf 90       	pop	r12
 bd8:	bf 90       	pop	r11
 bda:	af 90       	pop	r10
 bdc:	9f 90       	pop	r9
 bde:	8f 90       	pop	r8
 be0:	7f 90       	pop	r7
 be2:	6f 90       	pop	r6
 be4:	5f 90       	pop	r5
 be6:	4f 90       	pop	r4
 be8:	3f 90       	pop	r3
 bea:	2f 90       	pop	r2
 bec:	08 95       	ret

00000bee <strnlen_P>:
 bee:	fc 01       	movw	r30, r24
 bf0:	05 90       	lpm	r0, Z+
 bf2:	61 50       	subi	r22, 0x01	; 1
 bf4:	70 40       	sbci	r23, 0x00	; 0
 bf6:	01 10       	cpse	r0, r1
 bf8:	d8 f7       	brcc	.-10     	; 0xbf0 <strnlen_P+0x2>
 bfa:	80 95       	com	r24
 bfc:	90 95       	com	r25
 bfe:	8e 0f       	add	r24, r30
 c00:	9f 1f       	adc	r25, r31
 c02:	08 95       	ret

00000c04 <strnlen>:
 c04:	fc 01       	movw	r30, r24
 c06:	61 50       	subi	r22, 0x01	; 1
 c08:	70 40       	sbci	r23, 0x00	; 0
 c0a:	01 90       	ld	r0, Z+
 c0c:	01 10       	cpse	r0, r1
 c0e:	d8 f7       	brcc	.-10     	; 0xc06 <strnlen+0x2>
 c10:	80 95       	com	r24
 c12:	90 95       	com	r25
 c14:	8e 0f       	add	r24, r30
 c16:	9f 1f       	adc	r25, r31
 c18:	08 95       	ret

00000c1a <fputc>:
 c1a:	0f 93       	push	r16
 c1c:	1f 93       	push	r17
 c1e:	cf 93       	push	r28
 c20:	df 93       	push	r29
 c22:	fb 01       	movw	r30, r22
 c24:	23 81       	ldd	r18, Z+3	; 0x03
 c26:	21 fd       	sbrc	r18, 1
 c28:	03 c0       	rjmp	.+6      	; 0xc30 <fputc+0x16>
 c2a:	8f ef       	ldi	r24, 0xFF	; 255
 c2c:	9f ef       	ldi	r25, 0xFF	; 255
 c2e:	2c c0       	rjmp	.+88     	; 0xc88 <fputc+0x6e>
 c30:	22 ff       	sbrs	r18, 2
 c32:	16 c0       	rjmp	.+44     	; 0xc60 <fputc+0x46>
 c34:	46 81       	ldd	r20, Z+6	; 0x06
 c36:	57 81       	ldd	r21, Z+7	; 0x07
 c38:	24 81       	ldd	r18, Z+4	; 0x04
 c3a:	35 81       	ldd	r19, Z+5	; 0x05
 c3c:	42 17       	cp	r20, r18
 c3e:	53 07       	cpc	r21, r19
 c40:	44 f4       	brge	.+16     	; 0xc52 <fputc+0x38>
 c42:	a0 81       	ld	r26, Z
 c44:	b1 81       	ldd	r27, Z+1	; 0x01
 c46:	9d 01       	movw	r18, r26
 c48:	2f 5f       	subi	r18, 0xFF	; 255
 c4a:	3f 4f       	sbci	r19, 0xFF	; 255
 c4c:	31 83       	std	Z+1, r19	; 0x01
 c4e:	20 83       	st	Z, r18
 c50:	8c 93       	st	X, r24
 c52:	26 81       	ldd	r18, Z+6	; 0x06
 c54:	37 81       	ldd	r19, Z+7	; 0x07
 c56:	2f 5f       	subi	r18, 0xFF	; 255
 c58:	3f 4f       	sbci	r19, 0xFF	; 255
 c5a:	37 83       	std	Z+7, r19	; 0x07
 c5c:	26 83       	std	Z+6, r18	; 0x06
 c5e:	14 c0       	rjmp	.+40     	; 0xc88 <fputc+0x6e>
 c60:	8b 01       	movw	r16, r22
 c62:	ec 01       	movw	r28, r24
 c64:	fb 01       	movw	r30, r22
 c66:	00 84       	ldd	r0, Z+8	; 0x08
 c68:	f1 85       	ldd	r31, Z+9	; 0x09
 c6a:	e0 2d       	mov	r30, r0
 c6c:	09 95       	icall
 c6e:	89 2b       	or	r24, r25
 c70:	e1 f6       	brne	.-72     	; 0xc2a <fputc+0x10>
 c72:	d8 01       	movw	r26, r16
 c74:	16 96       	adiw	r26, 0x06	; 6
 c76:	8d 91       	ld	r24, X+
 c78:	9c 91       	ld	r25, X
 c7a:	17 97       	sbiw	r26, 0x07	; 7
 c7c:	01 96       	adiw	r24, 0x01	; 1
 c7e:	17 96       	adiw	r26, 0x07	; 7
 c80:	9c 93       	st	X, r25
 c82:	8e 93       	st	-X, r24
 c84:	16 97       	sbiw	r26, 0x06	; 6
 c86:	ce 01       	movw	r24, r28
 c88:	df 91       	pop	r29
 c8a:	cf 91       	pop	r28
 c8c:	1f 91       	pop	r17
 c8e:	0f 91       	pop	r16
 c90:	08 95       	ret

00000c92 <__ultoa_invert>:
 c92:	fa 01       	movw	r30, r20
 c94:	aa 27       	eor	r26, r26
 c96:	28 30       	cpi	r18, 0x08	; 8
 c98:	51 f1       	breq	.+84     	; 0xcee <__ultoa_invert+0x5c>
 c9a:	20 31       	cpi	r18, 0x10	; 16
 c9c:	81 f1       	breq	.+96     	; 0xcfe <__ultoa_invert+0x6c>
 c9e:	e8 94       	clt
 ca0:	6f 93       	push	r22
 ca2:	6e 7f       	andi	r22, 0xFE	; 254
 ca4:	6e 5f       	subi	r22, 0xFE	; 254
 ca6:	7f 4f       	sbci	r23, 0xFF	; 255
 ca8:	8f 4f       	sbci	r24, 0xFF	; 255
 caa:	9f 4f       	sbci	r25, 0xFF	; 255
 cac:	af 4f       	sbci	r26, 0xFF	; 255
 cae:	b1 e0       	ldi	r27, 0x01	; 1
 cb0:	3e d0       	rcall	.+124    	; 0xd2e <__ultoa_invert+0x9c>
 cb2:	b4 e0       	ldi	r27, 0x04	; 4
 cb4:	3c d0       	rcall	.+120    	; 0xd2e <__ultoa_invert+0x9c>
 cb6:	67 0f       	add	r22, r23
 cb8:	78 1f       	adc	r23, r24
 cba:	89 1f       	adc	r24, r25
 cbc:	9a 1f       	adc	r25, r26
 cbe:	a1 1d       	adc	r26, r1
 cc0:	68 0f       	add	r22, r24
 cc2:	79 1f       	adc	r23, r25
 cc4:	8a 1f       	adc	r24, r26
 cc6:	91 1d       	adc	r25, r1
 cc8:	a1 1d       	adc	r26, r1
 cca:	6a 0f       	add	r22, r26
 ccc:	71 1d       	adc	r23, r1
 cce:	81 1d       	adc	r24, r1
 cd0:	91 1d       	adc	r25, r1
 cd2:	a1 1d       	adc	r26, r1
 cd4:	20 d0       	rcall	.+64     	; 0xd16 <__ultoa_invert+0x84>
 cd6:	09 f4       	brne	.+2      	; 0xcda <__ultoa_invert+0x48>
 cd8:	68 94       	set
 cda:	3f 91       	pop	r19
 cdc:	2a e0       	ldi	r18, 0x0A	; 10
 cde:	26 9f       	mul	r18, r22
 ce0:	11 24       	eor	r1, r1
 ce2:	30 19       	sub	r19, r0
 ce4:	30 5d       	subi	r19, 0xD0	; 208
 ce6:	31 93       	st	Z+, r19
 ce8:	de f6       	brtc	.-74     	; 0xca0 <__ultoa_invert+0xe>
 cea:	cf 01       	movw	r24, r30
 cec:	08 95       	ret
 cee:	46 2f       	mov	r20, r22
 cf0:	47 70       	andi	r20, 0x07	; 7
 cf2:	40 5d       	subi	r20, 0xD0	; 208
 cf4:	41 93       	st	Z+, r20
 cf6:	b3 e0       	ldi	r27, 0x03	; 3
 cf8:	0f d0       	rcall	.+30     	; 0xd18 <__ultoa_invert+0x86>
 cfa:	c9 f7       	brne	.-14     	; 0xcee <__ultoa_invert+0x5c>
 cfc:	f6 cf       	rjmp	.-20     	; 0xcea <__ultoa_invert+0x58>
 cfe:	46 2f       	mov	r20, r22
 d00:	4f 70       	andi	r20, 0x0F	; 15
 d02:	40 5d       	subi	r20, 0xD0	; 208
 d04:	4a 33       	cpi	r20, 0x3A	; 58
 d06:	18 f0       	brcs	.+6      	; 0xd0e <__ultoa_invert+0x7c>
 d08:	49 5d       	subi	r20, 0xD9	; 217
 d0a:	31 fd       	sbrc	r19, 1
 d0c:	40 52       	subi	r20, 0x20	; 32
 d0e:	41 93       	st	Z+, r20
 d10:	02 d0       	rcall	.+4      	; 0xd16 <__ultoa_invert+0x84>
 d12:	a9 f7       	brne	.-22     	; 0xcfe <__ultoa_invert+0x6c>
 d14:	ea cf       	rjmp	.-44     	; 0xcea <__ultoa_invert+0x58>
 d16:	b4 e0       	ldi	r27, 0x04	; 4
 d18:	a6 95       	lsr	r26
 d1a:	97 95       	ror	r25
 d1c:	87 95       	ror	r24
 d1e:	77 95       	ror	r23
 d20:	67 95       	ror	r22
 d22:	ba 95       	dec	r27
 d24:	c9 f7       	brne	.-14     	; 0xd18 <__ultoa_invert+0x86>
 d26:	00 97       	sbiw	r24, 0x00	; 0
 d28:	61 05       	cpc	r22, r1
 d2a:	71 05       	cpc	r23, r1
 d2c:	08 95       	ret
 d2e:	9b 01       	movw	r18, r22
 d30:	ac 01       	movw	r20, r24
 d32:	0a 2e       	mov	r0, r26
 d34:	06 94       	lsr	r0
 d36:	57 95       	ror	r21
 d38:	47 95       	ror	r20
 d3a:	37 95       	ror	r19
 d3c:	27 95       	ror	r18
 d3e:	ba 95       	dec	r27
 d40:	c9 f7       	brne	.-14     	; 0xd34 <__ultoa_invert+0xa2>
 d42:	62 0f       	add	r22, r18
 d44:	73 1f       	adc	r23, r19
 d46:	84 1f       	adc	r24, r20
 d48:	95 1f       	adc	r25, r21
 d4a:	a0 1d       	adc	r26, r0
 d4c:	08 95       	ret

00000d4e <_exit>:
 d4e:	f8 94       	cli

00000d50 <__stop_program>:
 d50:	ff cf       	rjmp	.-2      	; 0xd50 <__stop_program>
